<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dashboard</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background: linear-gradient(to bottom, #0f0c29, #302b63, #24243e); /* Gradient Background */
            padding: 0;
            margin: 0;
            color: white;
        }

        .navbar {
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            z-index: 1000;
            background-color: #573b8a; /* Primary Color */
            padding: 10px;
            color: white;
        }

        .container {
            display: flex;
            flex-wrap: wrap;
            gap: 20px;
            padding: 20px;
            margin-top: 80px; /* Adjust for fixed navbar */
        }

        .card {
            width: calc(33.333% - 20px); /* Make each card 1/3 of the container's width */
            max-width: 300px; /* Set a max width for better appearance on larger screens */
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
            overflow: hidden;
            transition: transform 0.3s;
        }

        .card:hover {
            transform: translateY(-5px);
        }

        .card .slide {
            transition: transform 0.5s;
        }

        .slide.slide1 {
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100px;
            background-color: #573b8a; /* Primary Color */
            color: white;
            padding: 20px;
        }

        .slide.slide2 {
            display: flex;
            justify-content: center;
            align-items: center;
            flex-direction: column;
            background-color: #f9f9f9;
            padding: 20px;
        }

        .content h4 {
            margin: 0;
            font-size: 1.2rem;
            color: black; /* Change text color for content */
        }

        .slide.slide2 .content {
            display: flex;
            justify-content: space-between;
            gap: 10px;
            flex-wrap: wrap;
        }

        .slide.slide2 .content button {
            flex: 1 1 48%; /* Adjust button width */
            padding: 10px;
            background-color: #573b8a; /* Primary Color */
            color: #fff;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 14px;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 8px;
            transition: background-color 0.3s;
        }

        .slide.slide2 .content button:hover {
            background-color: #6d44b8; /* Hover Color */
        }

        /* Popup styles */
        .popup-btn {
            position: fixed;
            bottom: 20px;
            right: 20px;
            width: 90px;
            height: 90px;
            background-color: #00bcd4; /* Popup button primary color */
            border-radius: 50%;
            color: white;
            border: none;
            display: flex;
            justify-content: center;
            align-items: center;
            cursor: pointer;
            box-shadow: 0 8px 15px rgba(0, 0, 0, 0.2);
            z-index: 1001;
            transition: width 0.4s ease, height 0.4s ease, box-shadow 0.4s ease, background-color 0.3s ease;
            overflow: hidden;
        }

        .popup-btn:hover {
            background-color: #6d44b8; /* Hover Color */
            box-shadow: 0 12px 24px rgba(0, 0, 0, 0.3);
        }

        .popup-btn.expanded {
            width: 200px;
            height: 200px;
            box-shadow: 0 12px 24px rgba(0, 0, 0, 0.3);
        }

        .popup-btn span {
            font-size: 2rem;
            color: white;
            transition: transform 0.4s ease, top 0.4s ease;
        }

        .popup-btn.expanded span {
            transform: rotate(45deg);
            top: 120px;
        }

        .popup-options {
            display: none;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            height: 100%;
        }

        .popup-btn.expanded .popup-options {
            display: flex;
        }

        .popup-options button {
            background-color: white;
            color: #573b8a; /* Primary Color */
            border: none;
            padding: 10px 15px;
            border-radius: 20px;
            cursor: pointer;
            font-size: 14px;
            margin: 10px 0;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }

        .popup-options button:hover {
            transform: scale(1.05);
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
        }
    </style>
</head>

<body>
    <%- include('../public/navbar.html') %>

    <div class="container">
        <% data.forEach(test => { %>
            <div class="card">
                <div class="slide slide1">
                    <div class="content">
                        <div class="icon">
                            <h4>Subject: <%= test.subject %></h4>
                            <h4>Topic: <%= test.topic %></h4>
                            <h4>Code: <%= test.code %></h4>
                            <h4>Created At: <%= test.createdAt.toLocaleString() %></h4> <!-- Display date and time -->
                        </div>
                    </div>
                </div>
                <div class="slide slide2">
                    <div class="content">
                        <button onclick="viewScore('<%= test.code %>')"><i class="fa fa-eye"></i> View Scores</button>
                        <button onclick="edit('<%= test.code %>')"><i class="fa fa-pencil"></i> Edit</button>
                        <button onclick="activate('<%= test.code %>')"><i class="fa fa-check"></i> Activate</button>
                        <button onclick="deleteTest('<%= test.code %>')"><i class="fa fa-trash"></i> Delete</button>
                    </div>
                </div>
            </div>
        <% }) %>
    </div>

    <!-- Circular Pop-up Button -->
    <div class="popup-btn" id="popupBtn">
        <span>+</span> <!-- Initial + icon -->
        <div class="popup-options" id="popupOptions">
            <button id="createTest">Create Own Test</button>
            <button id="aiTest">Create with AI</button>
        </div>
    </div>

    <script>
        const popupBtn = document.getElementById('popupBtn');
        const popupOptions = document.getElementById('popupOptions');
    
        // View Score function
        function viewScore(code) {
            window.location.href = `/viewScore/${code}`;
        }
    
        // Edit function
        function edit(code) {
    window.location.href = `/edit/${code}`;  // Directly navigate to edit page
}
    
        // Activate function to change the status to 'active'
        function activate(code) {
            fetch(`/activate/${code}`, {
                method: 'POST'  // Change status to active with a POST request
            })
            .then(response => response.json()) // Parse the JSON response from the server
            .then(data => {
                if (data.success) {
                    alert('Test activated successfully!');
                    // Optionally update the UI to reflect the new status (e.g., change button text or color)
                } else {
                    alert('Failed to activate the test.');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Error activating the test.');
            });
        }
    
        // Delete function
        function deleteTest(code) {
            fetch(`/delete/${code}`, {
                method: 'DELETE'
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert('Test deleted successfully!');
                    // Optionally, remove the test card from the UI
                    document.getElementById(`test-card-${code}`).remove();
                } else {
                    alert('Failed to delete the test.');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Error deleting the test.');
            });
        }
    
        // Toggle popup expansion
        popupBtn.addEventListener('click', (event) => {
            popupBtn.classList.toggle('expanded');
            event.stopPropagation();
        });
    
        // Close the popup when clicked outside
        document.addEventListener('click', (event) => {
            if (!popupBtn.contains(event.target)) {
                popupBtn.classList.remove('expanded');
            }
        });
    
        // Redirect to backend endpoints when buttons are clicked
        document.getElementById('createTest').addEventListener('click', () => {
            window.location.href = '/createTest'; // Calls /createTest endpoint
        });
    
        document.getElementById('aiTest').addEventListener('click', () => {
            window.location.href = '/aitest'; // Calls /aitest endpoint
        });
    </script>    
</body>

</html>
